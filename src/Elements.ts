import { isBrowser } from './helpers';

export interface HTMLTagNameMap {
    a: HTMLAnchorElement;
    abbr: HTMLElement;
    address: HTMLElement;
    area: HTMLAreaElement;
    article: HTMLElement;
    aside: HTMLElement;
    audio: HTMLAudioElement;
    b: HTMLElement;
    base: HTMLBaseElement;
    bdi: HTMLElement;
    bdo: HTMLElement;
    blockquote: HTMLQuoteElement;
    body: HTMLBodyElement;
    br: HTMLBRElement;
    button: HTMLButtonElement;
    canvas: HTMLCanvasElement;
    caption: HTMLTableCaptionElement;
    cite: HTMLElement;
    code: HTMLElement;
    col: HTMLTableColElement;
    colgroup: HTMLTableColElement;
    data: HTMLDataElement;
    datalist: HTMLDataListElement;
    dd: HTMLElement;
    del: HTMLModElement;
    details: HTMLDetailsElement;
    dfn: HTMLElement;
    dialog: HTMLDialogElement;
    dir: HTMLDirectoryElement;
    div: HTMLDivElement;
    dl: HTMLDListElement;
    dt: HTMLElement;
    em: HTMLElement;
    embed: HTMLEmbedElement;
    fieldset: HTMLFieldSetElement;
    figcaption: HTMLElement;
    figure: HTMLElement;
    font: HTMLFontElement;
    footer: HTMLElement;
    form: HTMLFormElement;
    frame: HTMLFrameElement;
    frameset: HTMLFrameSetElement;
    h1: HTMLHeadingElement;
    h2: HTMLHeadingElement;
    h3: HTMLHeadingElement;
    h4: HTMLHeadingElement;
    h5: HTMLHeadingElement;
    h6: HTMLHeadingElement;
    head: HTMLHeadElement;
    header: HTMLElement;
    hgroup: HTMLElement;
    hr: HTMLHRElement;
    html: HTMLHtmlElement;
    i: HTMLElement;
    iframe: HTMLIFrameElement;
    img: HTMLImageElement;
    input: HTMLInputElement;
    ins: HTMLModElement;
    kbd: HTMLElement;
    label: HTMLLabelElement;
    legend: HTMLLegendElement;
    li: HTMLLIElement;
    link: HTMLLinkElement;
    main: HTMLElement;
    map: HTMLMapElement;
    mark: HTMLElement;
    marquee: HTMLMarqueeElement;
    menu: HTMLMenuElement;
    meta: HTMLMetaElement;
    meter: HTMLMeterElement;
    nav: HTMLElement;
    noscript: HTMLElement;
    object: HTMLObjectElement;
    ol: HTMLOListElement;
    optgroup: HTMLOptGroupElement;
    option: HTMLOptionElement;
    output: HTMLOutputElement;
    p: HTMLParagraphElement;
    param: HTMLParamElement;
    picture: HTMLPictureElement;
    pre: HTMLPreElement;
    progress: HTMLProgressElement;
    q: HTMLQuoteElement;
    rp: HTMLElement;
    rt: HTMLElement;
    ruby: HTMLElement;
    s: HTMLElement;
    samp: HTMLElement;
    script: HTMLScriptElement;
    section: HTMLElement;
    select: HTMLSelectElement;
    slot: HTMLSlotElement;
    small: HTMLElement;
    source: HTMLSourceElement;
    span: HTMLSpanElement;
    strong: HTMLElement;
    style: HTMLStyleElement;
    sub: HTMLElement;
    summary: HTMLElement;
    sup: HTMLElement;
    table: HTMLTableElement;
    tbody: HTMLTableSectionElement;
    td: HTMLTableCellElement;
    template: HTMLTemplateElement;
    textarea: HTMLTextAreaElement;
    tfoot: HTMLTableSectionElement;
    th: HTMLTableCellElement;
    thead: HTMLTableSectionElement;
    time: HTMLTimeElement;
    title: HTMLTitleElement;
    tr: HTMLTableRowElement;
    track: HTMLTrackElement;
    u: HTMLElement;
    ul: HTMLUListElement;
    var: HTMLElement;
    video: HTMLVideoElement;
    wbr: HTMLElement;
    big: HTMLElement;
    keygen: HTMLElement;
    menuitem: HTMLElement;
    noindex: HTMLElement;
}

export interface SVGTagNameMap {
    animate: SVGElement;
    animateMotion: SVGElement;
    animateTransform: SVGElement;
    circle: SVGCircleElement;
    clipPath: SVGClipPathElement;
    defs: SVGDefsElement;
    desc: SVGDescElement;
    ellipse: SVGEllipseElement;
    feBlend: SVGFEBlendElement;
    feColorMatrix: SVGFEColorMatrixElement;
    feComponentTransfer: SVGFEComponentTransferElement;
    feComposite: SVGFECompositeElement;
    feConvolveMatrix: SVGFEConvolveMatrixElement;
    feDiffuseLighting: SVGFEDiffuseLightingElement;
    feDisplacementMap: SVGFEDisplacementMapElement;
    feDistantLight: SVGFEDistantLightElement;
    feDropShadow: SVGElement;
    feFlood: SVGFEFloodElement;
    feFuncA: SVGFEFuncAElement;
    feFuncB: SVGFEFuncBElement;
    feFuncG: SVGFEFuncGElement;
    feFuncR: SVGFEFuncRElement;
    feGaussianBlur: SVGFEGaussianBlurElement;
    feImage: SVGFEImageElement;
    feMerge: SVGFEMergeElement;
    feMergeNode: SVGFEMergeNodeElement;
    feMorphology: SVGFEMorphologyElement;
    feOffset: SVGFEOffsetElement;
    fePointLight: SVGFEPointLightElement;
    feSpecularLighting: SVGFESpecularLightingElement;
    feSpotLight: SVGFESpotLightElement;
    feTile: SVGFETileElement;
    feTurbulence: SVGFETurbulenceElement;
    filter: SVGFilterElement;
    foreignObject: SVGForeignObjectElement;
    g: SVGGElement;
    image: SVGImageElement;
    line: SVGLineElement;
    linearGradient: SVGLinearGradientElement;
    marker: SVGMarkerElement;
    mask: SVGMaskElement;
    metadata: SVGMetadataElement;
    mpath: SVGElement;
    path: SVGPathElement;
    pattern: SVGPatternElement;
    polygon: SVGPolygonElement;
    polyline: SVGPolylineElement;
    radialGradient: SVGRadialGradientElement;
    rect: SVGRectElement;
    stop: SVGStopElement;
    svg: SVGSVGElement;
    switch: SVGSwitchElement;
    symbol: SVGSymbolElement;
    text: SVGTextElement;
    textPath: SVGTextPathElement;
    tspan: SVGTSpanElement;
    use: SVGUseElement;
    view: SVGViewElement;
}

const global = (isBrowser ? window : {}) as unknown as typeof window;

type GlobalThis = typeof globalThis;

export const HTMLElement: GlobalThis['HTMLElement'] = global.HTMLElement ?? class {};
export const HTMLAnchorElement: GlobalThis['HTMLAnchorElement'] = global.HTMLAnchorElement ?? HTMLElement;
export const HTMLAreaElement: GlobalThis['HTMLAreaElement'] = global.HTMLAreaElement ?? HTMLElement;
export const HTMLAudioElement: GlobalThis['HTMLAudioElement'] = global.HTMLAudioElement ?? HTMLElement;
export const HTMLBaseElement: GlobalThis['HTMLBaseElement'] = global.HTMLBaseElement ?? HTMLElement;
export const HTMLQuoteElement: GlobalThis['HTMLQuoteElement'] = global.HTMLQuoteElement ?? HTMLElement;
export const HTMLBodyElement: GlobalThis['HTMLBodyElement'] = global.HTMLBodyElement ?? HTMLElement;
export const HTMLBRElement: GlobalThis['HTMLBRElement'] = global.HTMLBRElement ?? HTMLElement;
export const HTMLButtonElement: GlobalThis['HTMLButtonElement'] = global.HTMLButtonElement ?? HTMLElement;
export const HTMLCanvasElement: GlobalThis['HTMLCanvasElement'] = global.HTMLCanvasElement ?? HTMLElement;
export const HTMLTableCaptionElement: GlobalThis['HTMLTableCaptionElement'] =
    global.HTMLTableCaptionElement ?? HTMLElement;
export const HTMLTableColElement: GlobalThis['HTMLTableColElement'] = global.HTMLTableColElement ?? HTMLElement;
export const HTMLDataElement: GlobalThis['HTMLDataElement'] = global.HTMLDataElement ?? HTMLElement;
export const HTMLDataListElement: GlobalThis['HTMLDataListElement'] = global.HTMLDataListElement ?? HTMLElement;
export const HTMLModElement: GlobalThis['HTMLModElement'] = global.HTMLModElement ?? HTMLElement;
export const HTMLDetailsElement: GlobalThis['HTMLDetailsElement'] = global.HTMLDetailsElement ?? HTMLElement;
export const HTMLDialogElement: GlobalThis['HTMLDialogElement'] = global.HTMLDialogElement ?? HTMLElement;
export const HTMLDirectoryElement: GlobalThis['HTMLDirectoryElement'] = global.HTMLDirectoryElement ?? HTMLElement;
export const HTMLDivElement: GlobalThis['HTMLDivElement'] = global.HTMLDivElement ?? HTMLElement;
export const HTMLDListElement: GlobalThis['HTMLDListElement'] = global.HTMLDListElement ?? HTMLElement;
export const HTMLEmbedElement: GlobalThis['HTMLEmbedElement'] = global.HTMLEmbedElement ?? HTMLElement;
export const HTMLFieldSetElement: GlobalThis['HTMLFieldSetElement'] = global.HTMLFieldSetElement ?? HTMLElement;
export const HTMLFontElement: GlobalThis['HTMLFontElement'] = global.HTMLFontElement ?? HTMLElement;
export const HTMLFormElement: GlobalThis['HTMLFormElement'] = global.HTMLFormElement ?? HTMLElement;
export const HTMLFrameElement: GlobalThis['HTMLFrameElement'] = global.HTMLFrameElement ?? HTMLElement;
export const HTMLFrameSetElement: GlobalThis['HTMLFrameSetElement'] = global.HTMLFrameSetElement ?? HTMLElement;
export const HTMLHeadingElement: GlobalThis['HTMLHeadingElement'] = global.HTMLHeadingElement ?? HTMLElement;
export const HTMLHeadElement: GlobalThis['HTMLHeadElement'] = global.HTMLHeadElement ?? HTMLElement;
export const HTMLHRElement: GlobalThis['HTMLHRElement'] = global.HTMLHRElement ?? HTMLElement;
export const HTMLIFrameElement: GlobalThis['HTMLIFrameElement'] = global.HTMLIFrameElement ?? HTMLElement;
export const HTMLImageElement: GlobalThis['HTMLImageElement'] = global.HTMLImageElement ?? HTMLElement;
export const HTMLInputElement: GlobalThis['HTMLInputElement'] = global.HTMLInputElement ?? HTMLElement;
export const HTMLLabelElement: GlobalThis['HTMLLabelElement'] = global.HTMLLabelElement ?? HTMLElement;
export const HTMLLegendElement: GlobalThis['HTMLLegendElement'] = global.HTMLLegendElement ?? HTMLElement;
export const HTMLLIElement: GlobalThis['HTMLLIElement'] = global.HTMLLIElement ?? HTMLElement;
export const HTMLLinkElement: GlobalThis['HTMLLinkElement'] = global.HTMLLinkElement ?? HTMLElement;
export const HTMLMapElement: GlobalThis['HTMLMapElement'] = global.HTMLMapElement ?? HTMLElement;
export const HTMLMarqueeElement: GlobalThis['HTMLMarqueeElement'] = global.HTMLMarqueeElement ?? HTMLElement;
export const HTMLMenuElement: GlobalThis['HTMLMenuElement'] = global.HTMLMenuElement ?? HTMLElement;
export const HTMLMetaElement: GlobalThis['HTMLMetaElement'] = global.HTMLMetaElement ?? HTMLElement;
export const HTMLMeterElement: GlobalThis['HTMLMeterElement'] = global.HTMLMeterElement ?? HTMLElement;
export const HTMLObjectElement: GlobalThis['HTMLObjectElement'] = global.HTMLObjectElement ?? HTMLElement;
export const HTMLOListElement: GlobalThis['HTMLOListElement'] = global.HTMLOListElement ?? HTMLElement;
export const HTMLOptGroupElement: GlobalThis['HTMLOptGroupElement'] = global.HTMLOptGroupElement ?? HTMLElement;
export const HTMLOptionElement: GlobalThis['HTMLOptionElement'] = global.HTMLOptionElement ?? HTMLElement;
export const HTMLOutputElement: GlobalThis['HTMLOutputElement'] = global.HTMLOutputElement ?? HTMLElement;
export const HTMLParagraphElement: GlobalThis['HTMLParagraphElement'] = global.HTMLParagraphElement ?? HTMLElement;
export const HTMLParamElement: GlobalThis['HTMLParamElement'] = global.HTMLParamElement ?? HTMLElement;
export const HTMLPictureElement: GlobalThis['HTMLPictureElement'] = global.HTMLPictureElement ?? HTMLElement;
export const HTMLPreElement: GlobalThis['HTMLPreElement'] = global.HTMLPreElement ?? HTMLElement;
export const HTMLProgressElement: GlobalThis['HTMLProgressElement'] = global.HTMLProgressElement ?? HTMLElement;
export const HTMLScriptElement: GlobalThis['HTMLScriptElement'] = global.HTMLScriptElement ?? HTMLElement;
export const HTMLSelectElement: GlobalThis['HTMLSelectElement'] = global.HTMLSelectElement ?? HTMLElement;
export const HTMLSlotElement: GlobalThis['HTMLSlotElement'] = global.HTMLSlotElement ?? HTMLElement;
export const HTMLSourceElement: GlobalThis['HTMLSourceElement'] = global.HTMLSourceElement ?? HTMLElement;
export const HTMLSpanElement: GlobalThis['HTMLSpanElement'] = global.HTMLSpanElement ?? HTMLElement;
export const HTMLStyleElement: GlobalThis['HTMLStyleElement'] = global.HTMLStyleElement ?? HTMLElement;
export const HTMLTableElement: GlobalThis['HTMLTableElement'] = global.HTMLTableElement ?? HTMLElement;
export const HTMLTableSectionElement: GlobalThis['HTMLTableSectionElement'] =
    global.HTMLTableSectionElement ?? HTMLElement;
export const HTMLTableCellElement: GlobalThis['HTMLTableCellElement'] = global.HTMLTableCellElement ?? HTMLElement;
export const HTMLTemplateElement: GlobalThis['HTMLTemplateElement'] = global.HTMLTemplateElement ?? HTMLElement;
export const HTMLTextAreaElement: GlobalThis['HTMLTextAreaElement'] = global.HTMLTextAreaElement ?? HTMLElement;
export const HTMLTimeElement: GlobalThis['HTMLTimeElement'] = global.HTMLTimeElement ?? HTMLElement;
export const HTMLTitleElement: GlobalThis['HTMLTitleElement'] = global.HTMLTitleElement ?? HTMLElement;
export const HTMLTableRowElement: GlobalThis['HTMLTableRowElement'] = global.HTMLTableRowElement ?? HTMLElement;
export const HTMLTrackElement: GlobalThis['HTMLTrackElement'] = global.HTMLTrackElement ?? HTMLElement;
export const HTMLUListElement: GlobalThis['HTMLUListElement'] = global.HTMLUListElement ?? HTMLElement;
export const HTMLVideoElement: GlobalThis['HTMLVideoElement'] = global.HTMLVideoElement ?? HTMLElement;
